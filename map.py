import pygame as pg

_ = False
mini_map = [
    [1, 1, 1, 1, 3, 1, 1, 1, 1, 3, 1, 2, 1, 1, 8, 7, 7, 7, 7, 8, 7, 7, 8, 7, 7, 7, 8, 8, 7, 7],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 7],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 7],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 7, _, _, _, _, _, _, _, _, _, _, _, _, 8],
    [3, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 8, _, _, _, _, _, _, _, _, _, _, _, _, 8],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 8, _, _, _, _, _, _, _, _, _, _, _, _, 7],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 8, _, _, _, _, _, _, _, _, _, _, _, _, 7],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 7, _, _, _, _, _, _, _, _, _, _, _, _, 7],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 7, _, _, _, _, _, _, _, _, _, _, _, _, 8],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 7, _, _, _, _, _, _, _, _, _, _, _, _, 8],
    [2, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 8, _, _, _, _, _, _, _, _, _, _, _, _, 8],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 8, _, _, _, _, _, _, _, _, _, _, _, _, 7],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 7, _, _, _, _, _, _, _, _, _, _, _, _, 7],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 7, _, _, _, _, _, _, _, _, _, _, _, _, 8],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 8, _, _, _, _, _, _, _, _, _, _, _, _, 7],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 8, _, _, _, _, _, _, _, _, _, _, _, _, 7],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 7, _, _, _, _, _, _, _, _, _, _, _, _, 7],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 7, _, _, _, _, _, _, _, _, _, _, _, _, 8],
    [1, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, _, 7, 7, 8, 8, 7, 7, 8, 7, 8, 7, 8, 7, 7, 8],
    [2, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 13],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 10],
    [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, _, _, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, _, _, 12],
    [4, _, _, _, _, _, _, _, _, _, _, _, _, 4, _, _, 9, _, _, _, _, _, _, _, _, _, _, _, _, 12],
    [5, _, _, _, _, _, _, _, _, _, _, _, _, 4, _, _, 9, _, _, _, _, _, _, _, _, _, _, _, _, 12],
    [4, _, _, _, _, _, _, _, _, _, _, _, _, 4, _, _, 9, _, _, _, _, _, _, _, _, _, _, _, _, 11],
    [4, _, _, _, _, _, _, _, _, _, _, _, _, 4, _, _, 9, _, _, _, _, _, _, _, _, _, _, _, _, 13],
    [4, _, _, _, _, _, _, _, _, _, _, _, _, 4, _, _, 9, _, _, _, _, _, _, _, _, _, _, _, _, 12],
    [4, _, _, _, _, _, _, _, _, _, _, _, _, 4, _, _, 9, _, _, _, _, _, _, _, _, _, _, _, _, 10],
    [4, _, _, _, _, _, _, _, _, _, _, _, _, 4, _, _, 9, _, _, _, _, _, _, _, _, _, _, _, _, 12],
    [6, _, _, _, _, _, _, _, _, _, _, _, _, 4, _, _, 9, _, _, _, _, _, _, _, _, _, _, _, _, 12],
    [4, _, _, _, _, _, _, _, _, _, _, _, _, 4, _, _, 9, _, _, _, _, _, _, _, _, _, _, _, _, 11],
    [4, _, _, _, _, _, _, _, _, _, _, _, _, 4, _, _, 9, _, _, _, _, _, _, _, _, _, _, _, _, 10],
    [4, _, _, _, _, _, _, _, _, _, _, _, _, 4, _, _, 9, _, _, _, _, _, _, _, _, _, _, _, _, 11],
    [5, _, _, _, _, _, _, _, _, _, _, _, _, 4, _, _, 9, _, _, _, _, _, _, _, _, _, _, _, _, 12],
    [4, _, _, _, _, _, _, _, _, _, _, _, _, 4, _, _, 9, _, _, _, _, _, _, _, _, _, _, _, _, 12],
    [4, _, _, _, _, _, _, _, _, _, _, _, _, 4, _, _, 9, _, _, _, _, _, _, _, _, _, _, _, _, 13],
    [6, _, _, _, _, _, _, _, _, _, _, _, _, 4, _, _, 9, _, _, _, _, _, _, _, _, _, _, _, _, 12],
    [4, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 9, _, _, _, _, _, _, _, _, _, _, _, _, 12],
    [4, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 9, _, _, _, _, _, _, _, _, _, _, _, _, 12],
    [4, 4, 6, 4, 4, 4, 4, 4, 6, 5, 4, 4, 4, 4, 5, 4, 9, 12, 10, 10, 13, 12, 12, 12, 11, 12, 12, 10, 13, 12],
]
#
class Map:
    def __init__(self, game):
        self.game = game
        self.mini_map = mini_map
        self.world_map = {}
        self.get_map()

    #
    def get_map(self):
        for j, row in enumerate(self.mini_map):
            for i, value in enumerate(row):
                if value:
                    self.world_map[(i, j)] = value
                    
    #
    def draw(self):
        [pg.draw.rect(self.game.screen, 'darkgray', (pos[0] * 100, pos[1] * 100, 100, 100), 2)
         for pos in self.world_map]