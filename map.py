import pygame as pg

#mapa: "_" = espaços vazios, "int" = texturas
_ = False
mini_map = [
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 5],
    [1, _, _, 2, 2, 2, 2, _, _, _, 2, 2, 2, _, _, 1],
    [1, _, _, _, _, _, 4, 2, _, _, _, _, 2, _, _, 4],
    [1, _, _, _, _, _, 5, 2, _, _, _, _, 2, _, _, 1],
    [1, _, _, 2, 2, 2, 2, _, _, _, _, _, _, _, _, 5],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [1, _, _, _, 2, _, _, _, 2, _, _, _, _, _, _, 4],
    [1, 1, 1, 3, 1, 3, 1, 1, 1, 2, _, _, 2, 1, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, _, _, 2, 1, 1, 1],
    [6, 6, 6, 6, 6, 6, 6, 6, 6, 6, _, _, 6, 6, 6, 6],
    [6, 6, 6, 6, 6, 8, 8, 6, 6, 6, _, _, 6, 6, 6, 6],
    [6, 6, _, _, _, _, _, _, _, _, _, _, _, _, _, 10],
    [9, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 6],
    [6, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 6],
    [8, _, _, 6, _, _, _, _, _, 6, 6, _, 6, 6, _, 6],
    [6, _, _, 6, _, _, _, _, _, _, 6, _, 6, _, _, 6],
    [6, _, _, 6, _, _, _, _, _, _, _, _, _, _, _, 6],
    [6, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 6],
    [6, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 6],
    [6, 6, _, _, _, _, _, _, 9, _, _, 9, _, _, _, 6],
    [6, 6, 6, 6, _, _, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],
    [11, 11, 11, 11, _, _, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11],
    [11, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 11],
    [11, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 11],
    [14, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 14],
    [11, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 11],
    [11, _, _, 13, _, _, _, 13, _, _, _, 13, _, _, _, 11],
    [14, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 14],
    [11, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 11],
    [11, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 11],
    [11, 11, 11, 14, 11, 11, 11, 14, 11, 11, 11, 14, 11, 11, 11, 14],
]

# classe do mapa junto com uma instância de classe do jogo
# para o minimapa e o mapa mundial se tornar atributos
class Map:
    def __init__(self, game):
        self.game = game
        self.mini_map = mini_map
        self.world_map = {}
        self.rows = len(self.mini_map)
        self.cols = len(self.mini_map[0])
        self.get_map()

    def get_map(self):
        for j, row in enumerate(self.mini_map):
            for i, value in enumerate(row):
                if value:
                    self.world_map[(i, j)] = value